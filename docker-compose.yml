version: '3.8'

services:
#   go run cmd/shortener/main.go -d 'postgres://postgres:qwerty@localhost:5432/postgres?sslmode=disable'
  go_service:
    build:
      context: .
      dockerfile: dockerfiles/go_service.dockerfile
    command: ./main
    ports:
      - "8080:8080"
    depends_on:
      - postgre_service
#      - goose_service
    environment:
      - DATABASE_DSN=postgres://postgres:qwerty@postgre_service:5432/postgres?sslmode=disable
    networks:
      - app-network

  # docker-compose run --rm goose_service - run goose service container
  # docker-compose up -d --build goose_service - rebuild goose container
#  goose_service:
#    build:
#      context: .
#      dockerfile: dockerfiles/goose_service.dockerfile
#    depends_on:
#      - postgre_service
#    environment:
#      - DBHOST=postgre_service
#      - DBNAME=postgres
#      - DBUSER=postgres
#      - DBPASSWORD=qwerty
#      - DBSSL=disable

  # docker-compose up -d --build goose_exec_service - rebuild goose container
  # docker-compose run --rm goose_exec_service create link_storage sql - create new migrations
  goose_exec_service:
    build:
      context: .
      dockerfile: dockerfiles/goose_service_exec.dockerfile
    depends_on:
      - postgre_service
    environment:
      - DBHOST=postgre_service
      - DBNAME=postgres
      - DBUSER=postgres
      - DBPASSWORD=qwerty
      - DBSSL=disable
    volumes:
      - ./migrations:/migrations
    entrypoint: [ "bash", "entrypoint_exec.sh" ]
    networks:
      - app-network

  postgre_service:
    restart: always
    image: postgres:latest
    container_name: postgres_db
    volumes:
      - ./db/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=qwerty
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
